import "core-js/modules/es7.symbol.async-iterator";
import "core-js/modules/es6.symbol";
import "core-js/modules/es6.object.set-prototype-of";
import "core-js/modules/web.dom.iterable";
import "core-js/modules/es6.array.iterator";
import "core-js/modules/es6.object.keys";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import PropTypes from 'prop-types';
import React, { Component, Fragment } from 'react';
import moment from 'moment';
import dateMath from '@elastic/datemath';
import { EuiButton, EuiButtonIcon } from '../../../button';
import { EuiFlexGroup, EuiFlexItem } from '../../../flex';
import { EuiTitle } from '../../../title';
import { EuiSpacer } from '../../../spacer';
import { EuiFormRow, EuiSelect, EuiFieldNumber } from '../../../form';
import { EuiToolTip } from '../../../tool_tip';
import { EuiHorizontalRule } from '../../../horizontal_rule';
import { timeUnits } from '../time_units';
var LAST = 'last';
var NEXT = 'next';
var timeTenseOptions = [{
  value: LAST,
  text: 'Last'
}, {
  value: NEXT,
  text: 'Next'
}];
var timeUnitsOptions = Object.keys(timeUnits).map(function (key) {
  return {
    value: key,
    text: "".concat(timeUnits[key], "s")
  };
});
export var EuiQuickSelect =
/*#__PURE__*/
function (_Component) {
  _inherits(EuiQuickSelect, _Component);

  function EuiQuickSelect(props) {
    var _this;

    _classCallCheck(this, EuiQuickSelect);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiQuickSelect).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onTimeTenseChange", function (evt) {
      _this.setState({
        timeTense: evt.target.value
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onTimeValueChange", function (evt) {
      var sanitizedValue = parseInt(evt.target.value, 10);

      _this.setState({
        timeValue: isNaN(sanitizedValue) ? '' : sanitizedValue
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onTimeUnitsChange", function (evt) {
      _this.setState({
        timeUnits: evt.target.value
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "applyQuickSelect", function () {
      var _this$state = _this.state,
          timeTense = _this$state.timeTense,
          timeValue = _this$state.timeValue,
          timeUnits = _this$state.timeUnits;

      if (timeTense === NEXT) {
        _this.props.applyTime({
          start: 'now',
          end: "now+".concat(timeValue).concat(timeUnits),
          quickSelect: _objectSpread({}, _this.state)
        });

        return;
      }

      _this.props.applyTime({
        start: "now-".concat(timeValue).concat(timeUnits),
        end: 'now',
        quickSelect: _objectSpread({}, _this.state)
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getBounds", function () {
      var startMoment = dateMath.parse(_this.props.start);
      var endMoment = dateMath.parse(_this.props.end, {
        roundUp: true
      });
      return {
        min: startMoment && startMoment.isValid() ? startMoment : moment().subtract(15, 'minute'),
        max: endMoment && endMoment.isValid() ? endMoment : moment()
      };
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "stepForward", function () {
      var _this$getBounds = _this.getBounds(),
          min = _this$getBounds.min,
          max = _this$getBounds.max;

      var diff = max.diff(min);

      _this.props.applyTime({
        start: moment(max).add(1, 'ms').toISOString(),
        end: moment(max).add(diff + 1, 'ms').toISOString(),
        keepPopoverOpen: true
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "stepBackward", function () {
      var _this$getBounds2 = _this.getBounds(),
          min = _this$getBounds2.min,
          max = _this$getBounds2.max;

      var diff = max.diff(min);

      _this.props.applyTime({
        start: moment(min).subtract(diff + 1, 'ms').toISOString(),
        end: moment(min).subtract(1, 'ms').toISOString(),
        keepPopoverOpen: true
      });
    });

    var _this$props$prevQuick = _this.props.prevQuickSelect,
        _timeTense = _this$props$prevQuick.timeTense,
        _timeValue = _this$props$prevQuick.timeValue,
        _timeUnits = _this$props$prevQuick.timeUnits;
    _this.state = {
      timeTense: _timeTense ? _timeTense : LAST,
      timeValue: _timeValue ? _timeValue : 15,
      timeUnits: _timeUnits ? _timeUnits : 'm'
    };
    return _this;
  }

  _createClass(EuiQuickSelect, [{
    key: "render",
    value: function render() {
      return React.createElement(Fragment, null, React.createElement(EuiFlexGroup, {
        responsive: false,
        alignItems: "center",
        gutterSize: "s"
      }, React.createElement(EuiFlexItem, null, React.createElement(EuiTitle, {
        size: "xxxs"
      }, React.createElement("span", null, "Quick select"))), React.createElement(EuiFlexItem, {
        grow: false
      }, React.createElement(EuiToolTip, {
        content: "Previous time window"
      }, React.createElement(EuiButtonIcon, {
        "aria-label": "Previous time window",
        iconType: "arrowLeft",
        onClick: this.stepBackward
      }))), React.createElement(EuiFlexItem, {
        grow: false
      }, React.createElement(EuiToolTip, {
        content: "Next time window"
      }, React.createElement(EuiButtonIcon, {
        "aria-label": "Next time window",
        iconType: "arrowRight",
        onClick: this.stepForward
      })))), React.createElement(EuiSpacer, {
        size: "s"
      }), React.createElement(EuiFlexGroup, {
        gutterSize: "s",
        responsive: false
      }, React.createElement(EuiFlexItem, null, React.createElement(EuiFormRow, {
        compressed: true
      }, React.createElement(EuiSelect, {
        "aria-label": "Quick time tense",
        value: this.state.timeTense,
        options: timeTenseOptions,
        onChange: this.onTimeTenseChange
      }))), React.createElement(EuiFlexItem, null, React.createElement(EuiFormRow, {
        compressed: true
      }, React.createElement(EuiFieldNumber, {
        "aria-label": "Quick time value",
        value: this.state.timeValue,
        onChange: this.onTimeValueChange
      }))), React.createElement(EuiFlexItem, null, React.createElement(EuiFormRow, {
        compressed: true
      }, React.createElement(EuiSelect, {
        "aria-label": "Quick time units",
        value: this.state.timeUnits,
        options: timeUnitsOptions,
        onChange: this.onTimeUnitsChange
      }))), React.createElement(EuiFlexItem, {
        grow: false
      }, React.createElement(EuiFormRow, null, React.createElement(EuiButton, {
        className: "euiQuickSelect__applyButton",
        size: "s",
        onClick: this.applyQuickSelect,
        disabled: this.state.timeValue === '' || this.state.timeValue <= 0
      }, "Apply")))), React.createElement(EuiHorizontalRule, {
        margin: "s"
      }));
    }
  }]);

  return EuiQuickSelect;
}(Component);
EuiQuickSelect.propTypes = {
  applyTime: PropTypes.func.isRequired,
  start: PropTypes.string.isRequired,
  end: PropTypes.string.isRequired,
  prevQuickSelect: PropTypes.object
};
EuiQuickSelect.defaultProps = {
  prevQuickSelect: {}
};
EuiQuickSelect.__docgenInfo = {
  "description": "",
  "methods": [{
    "name": "onTimeTenseChange",
    "docblock": null,
    "modifiers": [],
    "params": [{
      "name": "evt",
      "type": null
    }],
    "returns": null
  }, {
    "name": "onTimeValueChange",
    "docblock": null,
    "modifiers": [],
    "params": [{
      "name": "evt",
      "type": null
    }],
    "returns": null
  }, {
    "name": "onTimeUnitsChange",
    "docblock": null,
    "modifiers": [],
    "params": [{
      "name": "evt",
      "type": null
    }],
    "returns": null
  }, {
    "name": "applyQuickSelect",
    "docblock": null,
    "modifiers": [],
    "params": [],
    "returns": null
  }, {
    "name": "getBounds",
    "docblock": null,
    "modifiers": [],
    "params": [],
    "returns": null
  }, {
    "name": "stepForward",
    "docblock": null,
    "modifiers": [],
    "params": [],
    "returns": null
  }, {
    "name": "stepBackward",
    "docblock": null,
    "modifiers": [],
    "params": [],
    "returns": null
  }],
  "displayName": "EuiQuickSelect",
  "props": {
    "prevQuickSelect": {
      "defaultValue": {
        "value": "{}",
        "computed": false
      },
      "type": {
        "name": "object"
      },
      "required": false,
      "description": ""
    },
    "applyTime": {
      "type": {
        "name": "func"
      },
      "required": true,
      "description": ""
    },
    "start": {
      "type": {
        "name": "string"
      },
      "required": true,
      "description": ""
    },
    "end": {
      "type": {
        "name": "string"
      },
      "required": true,
      "description": ""
    }
  }
};