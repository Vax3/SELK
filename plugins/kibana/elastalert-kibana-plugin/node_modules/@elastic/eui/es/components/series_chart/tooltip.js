import "core-js/modules/es6.object.assign";
import "core-js/modules/web.dom.iterable";
import "core-js/modules/es6.array.iterator";
import "core-js/modules/es6.object.keys";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { Hint } from 'react-vis';
import PropTypes from 'prop-types'; // import {
//   colors,
//   unit,
//   units,
//   px,
//   borderRadius,
//   fontSize,
//   fontSizes
// } from '../../variables';
// import Legend from '../../Legend/Legend';
// const TooltipElm = styled.div`
//   margin: 0 ${px(unit)};
//   transform: translateY(-50%);
//   border: 1px solid ${colors.gray4};
//   background: ${colors.white};
//   border-radius: ${borderRadius};
//   font-size: ${fontSize};
//   color: ${colors.black};
// `;
// const Header = styled.div`
//   background: ${colors.gray5};
//   border-bottom: 1px solid ${colors.gray4};
//   border-radius: ${borderRadius} ${borderRadius} 0 0;
//   padding: ${px(units.half)};
//   color: ${colors.gray3};
// `;
// const Legends = styled.div`
//   display: flex;
//   flex-direction: column;
//   padding: ${px(units.half)};
//   padding: ${px(units.quarter)} ${px(unit)} ${px(units.quarter)}
//     ${px(units.half)};
//   font-size: ${fontSizes.small};
// `;
// const LegendContainer = styled.div`
//   display: flex;
//   align-items: center;
//   margin: ${px(units.quarter)} 0;
//   justify-content: space-between;
// `;
// const LegendGray = styled(Legend)`
//   color: ${colors.gray3};
// `;
// const Value = styled.div`
//   color: ${colors.gray2};
//   font-size: ${fontSize};
// `;
// <TooltipElm>
//     <Header>{header || moment(x).format('MMMM Do YYYY, HH:mm')}</Header>
//     <Legends>
//     {tooltipPoints.map((point, i) => (
//         <LegendContainer key={i}>
//         <LegendGray fontSize={fontSize.tiny} radius={units.half} color={point.color} text={point.text} />
//         <Value>{point.value}</Value>
//       </LegendContainer>
//     ))}
//   </Legends>
//   </TooltipElm>;

export default function Tooltip(_ref) {
  var tooltipPoints = _ref.tooltipPoints,
      x = _ref.x,
      y = _ref.y,
      props = _objectWithoutProperties(_ref, ["tooltipPoints", "x", "y"]);

  if (tooltipPoints.length === 0) {
    return null;
  }

  return React.createElement(Hint, _extends({}, props, {
    value: {
      x: x,
      y: y
    }
  }));
}
Tooltip.propTypes = {
  header: PropTypes.string,
  tooltipPoints: PropTypes.array.isRequired,
  x: PropTypes.number,
  y: PropTypes.number
};
Tooltip.defaultProps = {};
Tooltip.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Tooltip",
  "props": {
    "header": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "tooltipPoints": {
      "type": {
        "name": "array"
      },
      "required": true,
      "description": ""
    },
    "x": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": ""
    },
    "y": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": ""
    }
  }
};