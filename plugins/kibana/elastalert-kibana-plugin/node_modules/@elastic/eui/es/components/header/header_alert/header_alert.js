import "core-js/modules/es6.object.assign";
import "core-js/modules/web.dom.iterable";
import "core-js/modules/es6.array.iterator";
import "core-js/modules/es6.object.keys";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { EuiButtonIcon } from '../../button';
import { EuiFlexGroup, EuiFlexItem } from '../../flex';
import { EuiI18n } from '../../i18n';
export var EuiHeaderAlert = function EuiHeaderAlert(_ref) {
  var action = _ref.action,
      className = _ref.className,
      date = _ref.date,
      text = _ref.text,
      title = _ref.title,
      rest = _objectWithoutProperties(_ref, ["action", "className", "date", "text", "title"]);

  var classes = classNames('euiHeaderAlert', className);
  return React.createElement(EuiI18n, {
    token: "euiHeaderAlert.dismiss",
    default: "Dismiss"
  }, function (dismiss) {
    return React.createElement("div", _extends({
      className: classes
    }, rest), React.createElement(EuiButtonIcon, {
      "aria-label": dismiss,
      iconType: "cross",
      size: "s",
      className: "euiHeaderAlert__dismiss"
    }), React.createElement("div", {
      className: "euiHeaderAlert__title"
    }, title), React.createElement("div", {
      className: "euiHeaderAlert__text"
    }, text), React.createElement(EuiFlexGroup, {
      justifyContent: "spaceBetween"
    }, React.createElement(EuiFlexItem, {
      grow: false
    }, React.createElement("div", {
      className: "euiHeaderAlert__action euiLink"
    }, action)), React.createElement(EuiFlexItem, {
      grow: false
    }, React.createElement("div", {
      className: "euiHeaderAlert__date"
    }, date))));
  });
};
EuiHeaderAlert.propTypes = {
  action: PropTypes.node,
  className: PropTypes.string,
  date: PropTypes.node.isRequired,
  text: PropTypes.node,
  title: PropTypes.node.isRequired
};
EuiHeaderAlert.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "EuiHeaderAlert",
  "props": {
    "action": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "date": {
      "type": {
        "name": "node"
      },
      "required": true,
      "description": ""
    },
    "text": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    },
    "title": {
      "type": {
        "name": "node"
      },
      "required": true,
      "description": ""
    }
  }
};