import React from 'react';
import LegendItem from './legend_item';

var Title = function Title(_ref) {
  var children = _ref.children;
  return React.createElement("div", {
    className: "euiLegendTitle"
  }, children);
};

var Container = function Container(_ref2) {
  var children = _ref2.children;
  return React.createElement("div", {
    className: "euiLegendContainer"
  }, children);
};

var LegendContent = function LegendContent(_ref3) {
  var children = _ref3.children;
  return React.createElement("div", {
    className: "euiLegendContent"
  }, children);
};

var TruncatedLabel = function TruncatedLabel(_ref4) {
  var children = _ref4.children;
  return React.createElement("div", {
    className: "euiLegendTruncatedLabel"
  }, children);
};

var SeriesValue = function SeriesValue(_ref5) {
  var children = _ref5.children;
  return React.createElement("div", {
    className: "euiLegendSeriesValue"
  }, children);
};

var MoreSeriesContainer = function MoreSeriesContainer(_ref6) {
  var children = _ref6.children;
  return React.createElement("div", {
    className: "euiLegendMoreSeriesContainer"
  }, children);
};

function MoreSeries(_ref7) {
  var hiddenSeries = _ref7.hiddenSeries;

  if (hiddenSeries <= 0) {
    return null;
  }

  return React.createElement(MoreSeriesContainer, null, "(+", hiddenSeries, ")");
}

export default function Legends(_ref8) {
  var chartTitle = _ref8.chartTitle,
      truncateLegends = _ref8.truncateLegends,
      series = _ref8.series,
      hiddenSeries = _ref8.hiddenSeries,
      clickLegend = _ref8.clickLegend,
      seriesVisibility = _ref8.seriesVisibility;
  return React.createElement("div", null, React.createElement(Title, null, chartTitle), React.createElement(Container, null, series.filter(function (serie) {
    return !serie.isEmpty;
  }).map(function (serie, i) {
    var text = React.createElement(LegendContent, null, truncateLegends ? React.createElement(TruncatedLabel, {
      title: serie.title
    }, serie.title) : serie.title, serie.legendValue && React.createElement(SeriesValue, null, serie.legendValue));
    return React.createElement(LegendItem, {
      key: i,
      onClick: function onClick() {
        return clickLegend(i);
      },
      disabled: seriesVisibility[i],
      text: text,
      color: serie.color
    });
  }), React.createElement(MoreSeries, {
    hiddenSeries: hiddenSeries
  })));
}
Legends.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Legends"
};