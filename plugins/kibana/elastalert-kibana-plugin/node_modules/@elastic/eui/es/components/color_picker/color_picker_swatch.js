import "core-js/modules/es6.object.assign";
import "core-js/modules/web.dom.iterable";
import "core-js/modules/es6.array.iterator";
import "core-js/modules/es6.object.keys";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from "prop-types";
import classNames from 'classnames';
import { EuiColorPickerEmptySwatch } from './color_picker_empty_swatch';
export var EuiColorPickerSwatch = function EuiColorPickerSwatch(_ref) {
  var color = _ref.color,
      className = _ref.className,
      rest = _objectWithoutProperties(_ref, ["color", "className"]);

  var isClear = !color;
  var classes = classNames('euiColorPicker__swatch', className, {
    euiColorPicker__emptySwatch: isClear
  });
  var children;

  if (isClear) {
    children = React.createElement(EuiColorPickerEmptySwatch, null);
  }

  return React.createElement("div", _extends({
    className: classes,
    "data-test-subj": "colorSwatch",
    style: {
      background: color ? color : ''
    }
  }, rest), children);
};
EuiColorPickerSwatch.propTypes = {
  color: PropTypes.string
};
EuiColorPickerSwatch.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "EuiColorPickerSwatch",
  "props": {
    "color": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    }
  }
};