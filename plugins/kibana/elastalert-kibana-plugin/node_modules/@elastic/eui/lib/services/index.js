"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "accessibleClickKeys", {
  enumerable: true,
  get: function get() {
    return _accessibility.accessibleClickKeys;
  }
});
Object.defineProperty(exports, "cascadingMenuKeyCodes", {
  enumerable: true,
  get: function get() {
    return _accessibility.cascadingMenuKeyCodes;
  }
});
Object.defineProperty(exports, "comboBoxKeyCodes", {
  enumerable: true,
  get: function get() {
    return _accessibility.comboBoxKeyCodes;
  }
});
Object.defineProperty(exports, "htmlIdGenerator", {
  enumerable: true,
  get: function get() {
    return _accessibility.htmlIdGenerator;
  }
});
Object.defineProperty(exports, "LEFT_ALIGNMENT", {
  enumerable: true,
  get: function get() {
    return _alignment.LEFT_ALIGNMENT;
  }
});
Object.defineProperty(exports, "RIGHT_ALIGNMENT", {
  enumerable: true,
  get: function get() {
    return _alignment.RIGHT_ALIGNMENT;
  }
});
Object.defineProperty(exports, "CENTER_ALIGNMENT", {
  enumerable: true,
  get: function get() {
    return _alignment.CENTER_ALIGNMENT;
  }
});
Object.defineProperty(exports, "isColorDark", {
  enumerable: true,
  get: function get() {
    return _color.isColorDark;
  }
});
Object.defineProperty(exports, "calculateContrast", {
  enumerable: true,
  get: function get() {
    return _color.calculateContrast;
  }
});
Object.defineProperty(exports, "calculateLuminance", {
  enumerable: true,
  get: function get() {
    return _color.calculateLuminance;
  }
});
Object.defineProperty(exports, "hexToRgb", {
  enumerable: true,
  get: function get() {
    return _color.hexToRgb;
  }
});
Object.defineProperty(exports, "rgbToHex", {
  enumerable: true,
  get: function get() {
    return _color.rgbToHex;
  }
});
Object.defineProperty(exports, "VISUALIZATION_COLORS", {
  enumerable: true,
  get: function get() {
    return _color.VISUALIZATION_COLORS;
  }
});
Object.defineProperty(exports, "DEFAULT_VISUALIZATION_COLOR", {
  enumerable: true,
  get: function get() {
    return _color.DEFAULT_VISUALIZATION_COLOR;
  }
});
Object.defineProperty(exports, "colorPalette", {
  enumerable: true,
  get: function get() {
    return _color.colorPalette;
  }
});
Object.defineProperty(exports, "palettes", {
  enumerable: true,
  get: function get() {
    return _color.palettes;
  }
});
Object.defineProperty(exports, "copyToClipboard", {
  enumerable: true,
  get: function get() {
    return _copy_to_clipboard.copyToClipboard;
  }
});
Object.defineProperty(exports, "formatAuto", {
  enumerable: true,
  get: function get() {
    return _format.formatAuto;
  }
});
Object.defineProperty(exports, "formatBoolean", {
  enumerable: true,
  get: function get() {
    return _format.formatBoolean;
  }
});
Object.defineProperty(exports, "formatDate", {
  enumerable: true,
  get: function get() {
    return _format.formatDate;
  }
});
Object.defineProperty(exports, "formatNumber", {
  enumerable: true,
  get: function get() {
    return _format.formatNumber;
  }
});
Object.defineProperty(exports, "formatText", {
  enumerable: true,
  get: function get() {
    return _format.formatText;
  }
});
Object.defineProperty(exports, "isEvenlyDivisibleBy", {
  enumerable: true,
  get: function get() {
    return _number.isEvenlyDivisibleBy;
  }
});
Object.defineProperty(exports, "isWithinRange", {
  enumerable: true,
  get: function get() {
    return _number.isWithinRange;
  }
});
Object.defineProperty(exports, "Pager", {
  enumerable: true,
  get: function get() {
    return _paging.Pager;
  }
});
Object.defineProperty(exports, "Random", {
  enumerable: true,
  get: function get() {
    return _random.Random;
  }
});
Object.defineProperty(exports, "getSecureRelForTarget", {
  enumerable: true,
  get: function get() {
    return _security.getSecureRelForTarget;
  }
});
Object.defineProperty(exports, "toInitials", {
  enumerable: true,
  get: function get() {
    return _string.toInitials;
  }
});
Object.defineProperty(exports, "PropertySortType", {
  enumerable: true,
  get: function get() {
    return _sort.PropertySortType;
  }
});
Object.defineProperty(exports, "SortDirectionType", {
  enumerable: true,
  get: function get() {
    return _sort.SortDirectionType;
  }
});
Object.defineProperty(exports, "SortDirection", {
  enumerable: true,
  get: function get() {
    return _sort.SortDirection;
  }
});
Object.defineProperty(exports, "SortableProperties", {
  enumerable: true,
  get: function get() {
    return _sort.SortableProperties;
  }
});
Object.defineProperty(exports, "Comparators", {
  enumerable: true,
  get: function get() {
    return _sort.Comparators;
  }
});
Object.defineProperty(exports, "calculatePopoverPosition", {
  enumerable: true,
  get: function get() {
    return _popover.calculatePopoverPosition;
  }
});
Object.defineProperty(exports, "findPopoverPosition", {
  enumerable: true,
  get: function get() {
    return _popover.findPopoverPosition;
  }
});
Object.defineProperty(exports, "EuiWindowEvent", {
  enumerable: true,
  get: function get() {
    return _window_event.EuiWindowEvent;
  }
});
exports.keyCodes = void 0;

var keyCodes = _interopRequireWildcard(require("./key_codes"));

exports.keyCodes = keyCodes;

var _accessibility = require("./accessibility");

var _alignment = require("./alignment");

var _color = require("./color");

var _copy_to_clipboard = require("./copy_to_clipboard");

var _format = require("./format");

var _number = require("./number");

var _paging = require("./paging");

var _random = require("./random");

var _security = require("./security");

var _string = require("./string");

var _sort = require("./sort");

var _popover = require("./popover");

var _window_event = require("./window_event");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }