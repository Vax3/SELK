"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiSwitch = void 0;

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.object.assign");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.object.set-prototype-of");

require("core-js/modules/es6.function.name");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _make_id = _interopRequireDefault(require("../../form/form_row/make_id"));

var _icon = require("../../icon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var EuiSwitch =
/*#__PURE__*/
function (_Component) {
  _inherits(EuiSwitch, _Component);

  function EuiSwitch(props) {
    var _this;

    _classCallCheck(this, EuiSwitch);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(EuiSwitch).call(this, props));
    _this.state = {
      switchId: props.id || (0, _make_id.default)()
    };
    return _this;
  }

  _createClass(EuiSwitch, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          id = _this$props.id,
          name = _this$props.name,
          checked = _this$props.checked,
          disabled = _this$props.disabled,
          compressed = _this$props.compressed,
          onChange = _this$props.onChange,
          className = _this$props.className,
          rest = _objectWithoutProperties(_this$props, ["label", "id", "name", "checked", "disabled", "compressed", "onChange", "className"]);

      var switchId = this.state.switchId;
      var classes = (0, _classnames.default)('euiSwitch', {
        'euiSwitch--compressed': compressed
      }, className);
      return _react.default.createElement("div", {
        className: classes
      }, _react.default.createElement("input", _extends({
        className: "euiSwitch__input",
        name: name,
        id: switchId,
        type: "checkbox",
        checked: checked,
        disabled: disabled,
        onChange: onChange
      }, rest)), _react.default.createElement("span", {
        className: "euiSwitch__body"
      }, _react.default.createElement("span", {
        className: "euiSwitch__thumb"
      }), _react.default.createElement("span", {
        className: "euiSwitch__track"
      }, _react.default.createElement(_icon.EuiIcon, {
        type: "cross",
        size: "m",
        className: "euiSwitch__icon"
      }), _react.default.createElement(_icon.EuiIcon, {
        type: "check",
        size: "m",
        className: "euiSwitch__icon euiSwitch__icon--checked"
      }))), label && _react.default.createElement("label", {
        className: "euiSwitch__label",
        htmlFor: switchId
      }, label));
    }
  }]);

  return EuiSwitch;
}(_react.Component);

exports.EuiSwitch = EuiSwitch;
EuiSwitch.propTypes = {
  name: _propTypes.default.string,
  id: _propTypes.default.string,
  label: _propTypes.default.node,
  checked: _propTypes.default.bool,
  onChange: _propTypes.default.func,
  disabled: _propTypes.default.bool,
  compressed: _propTypes.default.bool
};
EuiSwitch.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "EuiSwitch",
  "props": {
    "name": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "id": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "label": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    },
    "checked": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "onChange": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": ""
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    },
    "compressed": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": ""
    }
  }
};