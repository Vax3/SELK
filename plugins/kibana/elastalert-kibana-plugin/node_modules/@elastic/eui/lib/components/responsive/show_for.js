"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiShowFor = exports.RESPONSIVE_SIZES = void 0;

require("core-js/modules/es6.object.assign");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var responsiveSizesToClassNameMap = {
  xs: 'eui-showFor--xs',
  s: 'eui-showFor--s',
  m: 'eui-showFor--m',
  l: 'eui-showFor--l',
  xl: 'eui-showFor--xl'
};
var RESPONSIVE_SIZES = Object.keys(responsiveSizesToClassNameMap);
exports.RESPONSIVE_SIZES = RESPONSIVE_SIZES;

var EuiShowFor = function EuiShowFor(_ref) {
  var children = _ref.children,
      className = _ref.className,
      sizes = _ref.sizes,
      rest = _objectWithoutProperties(_ref, ["children", "className", "sizes"]);

  var sizingClasses = sizes.map(function (item) {
    return responsiveSizesToClassNameMap[item];
  });
  var classes = (0, _classnames.default)('euiShowFor', sizingClasses, className);
  return _react.default.createElement("span", _extends({
    className: classes
  }, rest), children);
};

exports.EuiShowFor = EuiShowFor;
EuiShowFor.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,

  /**
   * List of all the responsive sizes to show the children for
   */
  sizes: _propTypes.default.arrayOf(_propTypes.default.oneOf(RESPONSIVE_SIZES)).isRequired
};
EuiShowFor.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "EuiShowFor",
  "props": {
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": ""
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": ""
    },
    "sizes": {
      "type": {
        "name": "arrayOf",
        "value": {
          "name": "enum",
          "value": [{
            "value": "\"xs\"",
            "computed": false
          }, {
            "value": "\"s\"",
            "computed": false
          }, {
            "value": "\"m\"",
            "computed": false
          }, {
            "value": "\"l\"",
            "computed": false
          }, {
            "value": "\"xl\"",
            "computed": false
          }]
        }
      },
      "required": true,
      "description": "List of all the responsive sizes to show the children for"
    }
  }
};