"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiYAxis = void 0;

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.object.assign");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.object.set-prototype-of");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactVis = require("react-vis");

var _axis_utils = require("../utils/axis_utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TITLE_POSITION = _axis_utils.EuiSeriesChartAxisUtils.TITLE_POSITION,
    ORIENTATION = _axis_utils.EuiSeriesChartAxisUtils.ORIENTATION;

var EuiYAxis =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(EuiYAxis, _PureComponent);

  function EuiYAxis() {
    _classCallCheck(this, EuiYAxis);

    return _possibleConstructorReturn(this, _getPrototypeOf(EuiYAxis).apply(this, arguments));
  }

  _createClass(EuiYAxis, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          title = _this$props.title,
          titlePosition = _this$props.titlePosition,
          orientation = _this$props.orientation,
          tickSize = _this$props.tickSize,
          tickLabelAngle = _this$props.tickLabelAngle,
          tickFormat = _this$props.tickFormat,
          tickValues = _this$props.tickValues,
          onZero = _this$props.onZero,
          rest = _objectWithoutProperties(_this$props, ["title", "titlePosition", "orientation", "tickSize", "tickLabelAngle", "tickFormat", "tickValues", "onZero"]);

      return _react.default.createElement(_reactVis.YAxis, _extends({
        title: title,
        position: titlePosition,
        orientation: orientation,
        on0: onZero,
        tickSize: tickSize,
        tickFormat: tickFormat,
        tickValues: tickValues,
        tickLabelAngle: tickLabelAngle
      }, rest));
    }
  }]);

  return EuiYAxis;
}(_react.PureComponent);

exports.EuiYAxis = EuiYAxis;
EuiYAxis.displayName = 'EuiYAxis';
EuiYAxis.propTypes = {
  /** The axis title */
  title: _propTypes.default.string,

  /** The axis title position */
  titlePosition: _propTypes.default.oneOf([TITLE_POSITION.START, TITLE_POSITION.MIDDLE, TITLE_POSITION.END]),

  /** The axis orientation */
  orientation: _propTypes.default.oneOf([ORIENTATION.LEFT, ORIENTATION.RIGHT]),

  /** Fix the axis at zero value */
  onZero: _propTypes.default.bool,

  /** An array of ticks values */
  ticks: _propTypes.default.array,

  /** The height of the ticks in pixels */
  tickSize: _propTypes.default.number,

  /** TODO */
  tickValues: _propTypes.default.array,

  /** A formatter function in the form of function(value, index, scale, tickTotal) */
  tickFormat: _propTypes.default.func,

  /** the rotation angle in degree of the tick label */
  tickLabelAngle: _propTypes.default.number
};
EuiYAxis.defaultProps = {
  onZero: false,
  titlePosition: TITLE_POSITION.MIDDLE,
  orientation: ORIENTATION.LEFT,
  tickSize: 0
};
EuiYAxis.requiresSVG = true;
EuiYAxis.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "EuiYAxis",
  "props": {
    "onZero": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Fix the axis at zero value"
    },
    "titlePosition": {
      "defaultValue": {
        "value": "TITLE_POSITION.MIDDLE",
        "computed": true
      },
      "type": {
        "name": "enum",
        "value": [{
          "value": "TITLE_POSITION.START",
          "computed": true
        }, {
          "value": "TITLE_POSITION.MIDDLE",
          "computed": true
        }, {
          "value": "TITLE_POSITION.END",
          "computed": true
        }]
      },
      "required": false,
      "description": "The axis title position"
    },
    "orientation": {
      "defaultValue": {
        "value": "ORIENTATION.LEFT",
        "computed": true
      },
      "type": {
        "name": "enum",
        "value": [{
          "value": "ORIENTATION.LEFT",
          "computed": true
        }, {
          "value": "ORIENTATION.RIGHT",
          "computed": true
        }]
      },
      "required": false,
      "description": "The axis orientation"
    },
    "tickSize": {
      "defaultValue": {
        "value": "0",
        "computed": false
      },
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "The height of the ticks in pixels"
    },
    "title": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "The axis title"
    },
    "ticks": {
      "type": {
        "name": "array"
      },
      "required": false,
      "description": "An array of ticks values"
    },
    "tickValues": {
      "type": {
        "name": "array"
      },
      "required": false,
      "description": "TODO"
    },
    "tickFormat": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "A formatter function in the form of function(value, index, scale, tickTotal)"
    },
    "tickLabelAngle": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "the rotation angle in degree of the tick label"
    }
  }
};